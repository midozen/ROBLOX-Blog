---
import { marked } from "marked";
import { formatDate, getPostLink } from "@utils/general";

interface Props {
  post: {
      author: {
          username: string;
      };
      categories: {
          id: number;
          categoryName: string;
      }[];
  } & {
      content: string | null;
      id: number;
      dateCreated: Date;
      slug: string;
      title: string;
      authorId: number;
  };
}

const { post } = Astro.props;
const { user } = Astro.locals;

const content = marked.parse(post.content?.slice(0, 256) ?? "Nothing.");
---

<!-- <div id={`post-${post.id}`} class="post">
  <span class="posted-by">
    <span class="date">{formatDate(post.dateCreated)}</span>
    {
      user && (
        <p>
          <a href={`/dashboard/edit?id=${post.id}`}>Edit</a> or
          <a
            href="#"
            onclick={`
                    if (window.confirm("Are you sure you want to delete this post?")) {
                        window.location = "/api/post/delete?id=${post.id}";
                    }`}
          >
            Delete
          </a>
        </p>
      )
    }
  </span>

  <h2 class="storytitle">
    <a href={`/post/${post.id}`} rel="bookmark">
      {post.title}
    </a>
  </h2>

  <div class="storycontent">
    <Fragment set:html={content} />
    <p>- {post.author.username}</p>

    <div>
      <a href="#" title="Bookmark using any bookmark manager!">
        <img
          src="/images/button1-bm.gif"
          alt="AddThis Social Bookmark Button"
          width="125"
          height="16"
        />
      </a>
    </div>
    <br />
  </div>
  <div class="post-footer">
    <div class="meta">
      Posted in:
      <Fragment
        set:html={post.categories
          .map((category: any) => {
            return `<a href="/?cat=${category.id}" title="View all posts in ${category.categoryName}" rel="category">${category.categoryName}</a>`;
          })
          .join(", ") || "<i>No Categories</i>"}
      />
      {/* Such a hacky solution */}
    </div>
    <div class="feedback">
      <span>Comments Off</span>
    </div>
    <div class="clear"></div>
  </div>
</div> -->


<article id={`post-${post.id}`} class={`post-${post.id} post type-post status-publish format-standard hentry`}>
  <header class="entry-header">
    <h1 class="entry-title">
      <a 
        href={getPostLink(post)}
        title={post.title}
        rel="bookmark"
        >
        {post.title}
      </a>
    </h1>
    <div class="entry-meta">
      <span class="by-author">
        <span class="sep"> By </span> 
        <span class="author vcard">
          <a class="url fn n" href={`/author/${post.author.username}/`} title={`View all posts by ${post.author.username}`} rel="author">{post.author.username}</a>
        </span>
      </span> - 
      <time class="entry-date" datetime={post.dateCreated.toISOString()}>{formatDate(post.dateCreated)}</time>
    </div>
    <div class="comments-link">
      <a href={`${getPostLink(post)}/#comments`} title={`Comment on ${post.title}`}></a>
    </div>
  </header>
  <div class="entry-content">
    <Fragment set:html={content} />
  </div>

  <footer class="entry-meta">
    <span class="cat-links">
      <span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> 
      <Fragment
        set:html={post.categories
          .map((category: any) => {
            return `<a href="/category/${category.categoryName}" title="View all posts in ${category.categoryName}" rel="category tag">${category.categoryName}</a>`;
          })
          .join(", ") || "<i>No Categories</i>"}
      />
    </span>
    <span class="sep"> | </span>
    <span class="comments-link"><a href={`${getPostLink(post)}/#comments`} title={`Comment on ${post.title}`}><span class="leave-reply">Leave a reply</span></a></span>
  </footer>
</article>