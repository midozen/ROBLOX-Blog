---
import { marked } from "marked";

import { formatDate, getPostLink } from "@utils/general";
import type { Post } from "@utils/types";

interface Props {
  post: Post;
}

const { post } = Astro.props;
const { user } = Astro.locals;

const content = marked.parse(post.content?.slice(0, 256) ?? "Nothing.");

const adjustDisplayDates = Astro.cookies.get("larp-mode")?.value === "true";
---

<article id={`post-${post.id}`} class={`post-${post.id} post type-post status-publish format-standard hentry`}>
  <header class="entry-header">
    <h1 class="entry-title">
      <a 
        href={getPostLink(post, adjustDisplayDates)}
        title={post.title}
        rel="bookmark"
        >
        {post.title}
      </a>
    </h1>
    <div class="entry-meta">
      <span class="by-author">
        <span class="sep"> By </span> 
        <span class="author vcard">
          <a class="url fn n" href={`/author/${post.author.username}/`} title={`View all posts by ${post.author.username}`} rel="author">{post.author.username}</a>
        </span>
      </span> - 
      <time class="entry-date" datetime={post.dateCreated.toISOString()}>{formatDate(post.dateCreated, adjustDisplayDates)}</time>
      {user && (
          <span>
            - 
            <a href={`/dashboard/edit?id=${post.id}`}>Edit</a> or
            <a
              href="#"
              onclick={`
                      if (window.confirm("Are you sure you want to delete this post?")) {
                          window.location = "/api/post/delete?id=${post.id}";
                      }`}
            >
              Delete
            </a>
          </span>
      )}
    </div>
    <div class="comments-link">
      <a href={`${getPostLink(post, adjustDisplayDates)}/#comments`} title={`Comment on ${post.title}`}></a>
    </div>
  </header>
  <div class="entry-content">
    <Fragment set:html={content} />
  </div>

  <footer class="entry-meta">
    <span class="cat-links">
      <span class="entry-utility-prep entry-utility-prep-cat-links">Posted in</span> 
      <Fragment
        set:html={post.categories
          .map((category: any) => {
            return `<a href="/category/${category.categoryName}" title="View all posts in ${category.categoryName}" rel="category tag">${category.categoryName}</a>`;
          })
          .join(", ") || "<i>No Categories</i>"}
      />
    </span>
    <span class="sep"> | </span>
    <span class="comments-link"><a href={`${getPostLink(post, adjustDisplayDates)}/#comments`} title={`Comment on ${post.title}`}><span class="leave-reply">Leave a reply</span></a></span>
  </footer>
</article>