---
import Layout from "@layouts/Layout.astro";

import CollapsedPost from "@components/Post/CollapsedPost.astro";

import { prisma, getRSSFeed, postInclude } from "@utils/prisma";
import Pagination from "@components/Pagination.astro";

// How much posts to query per page
const POSTS_PER_PAGE = 8;

// Extract and validate search paramters
const pageNumber = Math.max(1, Number(Astro.url.searchParams.get("paged")) || 1);
const category = Astro.url.searchParams.get("cat") || "";
const month = Astro.url.searchParams.get("m") || "";
const searchQuery = Astro.url.searchParams.get("s") || "";
const feed = Astro.url.searchParams.get("feed") || "";

if (feed === "rss")
  return await getRSSFeed();

// Get the total number of posts & calculate the max page count
const totalPosts = await prisma.post.count();
const maxPageCount = Math.ceil(totalPosts / POSTS_PER_PAGE);

// Validate page number
if (pageNumber > maxPageCount) {
    return new Response(null, { status: 404 });
}

const skip = (pageNumber - 1) * POSTS_PER_PAGE;

// Construct dynamic query conditions
const queryConditions = {
  // TODO: Fix month filtering
  ...(month && (() => {
    const year = month.slice(0, 4);
    const monthPart = month.slice(4);
    const startDate = new Date(`${year}-${monthPart}-01`);
    const endDate = new Date(startDate);
    endDate.setMonth(endDate.getMonth() + 1);
    return { dateCreated: { gte: startDate, lt: endDate } };
  })()),
  ...(category && {
    categories: {
      some: {id: Number(category)}
    }
  }),
  ...(searchQuery && {
    title: { contains: searchQuery } 
  })
};

const posts = await prisma.post.findMany({
  include: postInclude,
  where: queryConditions,
  skip,
  take: POSTS_PER_PAGE,
  orderBy: { dateCreated: "desc" }
})
---

<Layout title="Roblox Blog > Free Games at Roblox.com">
  {pageNumber > 1 && (
    <Pagination pageNumber={pageNumber} maxPageCount={maxPageCount} />
  )}

  {posts.length === 0 && (
	  <p>No results matched your query.</p>
  )}

  {posts.map((post) => <CollapsedPost post={post} />)}

  <Pagination pageNumber={pageNumber} maxPageCount={maxPageCount} />
</Layout>
