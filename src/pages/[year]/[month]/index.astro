---
import Layout from "@layouts/Layout.astro";

import PostPreview from "@components/Post/PostPreview.astro";
import Pagination from "@components/Common/Pagination.astro";

import { getPosts } from "@lib/services/posts";

import { getAdjustedYear } from "@utils/date";

const pageNumber = Math.max(1, Number(Astro.url.searchParams.get("paged")) || 1);

const { year, month } = Astro.params;
const adjustDisplayDates = Astro.cookies.get("larp-mode")?.value === "true";

const yearNum = Number(year);
const monthNum = Number(month);

// Check if date is valid
if (isNaN(yearNum) || isNaN(monthNum) || monthNum < 1 || monthNum > 12) {
  return new Response(null, { status: 404 });
}

const date = new Date(yearNum, monthNum - 1, 1);

// Check if date is valid after construction
if (date.getFullYear() !== yearNum || date.getMonth() !== monthNum - 1) {
  return new Response(null, { status: 404 });
}

const formattedMonth = date.toLocaleString("default", { month: "long" });
const formattedYear = getAdjustedYear(date, adjustDisplayDates);

const { posts, pageCount } = await getPosts({ page: pageNumber, date: { year: yearNum, month: monthNum } });
---

<Layout title={`${formattedMonth} > ${formattedYear} > Roblox Blog`} type="archive date">
  {pageNumber > 1 && (
    <Pagination pageNumber={pageNumber} maxPageCount={pageCount} />
  )}

  <h1 class="page-title">
    Monthly Archives:
    <span>{formattedMonth} {formattedYear}</span>
  </h1>

  {posts.map((post) => <PostPreview post={post} />)}

  <Pagination pageNumber={pageNumber} maxPageCount={pageCount} />
</Layout>